package handlers

import (
	"encoding/json"
	"net/http"

	"github.com/clems4ever/go-graphkb/internal/knowledge"
	"github.com/clems4ever/go-graphkb/internal/sources"
)

// GetGraphRead GET the entire graph generated by the data source
func GetGraphRead(registry sources.Registry, graphDB knowledge.GraphDB) http.HandlerFunc {
	return func(w http.ResponseWriter, r *http.Request) {
		ok, source, err := IsTokenValid(registry, r)
		if err != nil {
			ReplyWithInternalError(w, err)
			return
		}

		if !ok {
			ReplyWithUnauthorized(w)
			return
		}

		g := knowledge.NewGraph()
		if err := graphDB.ReadGraph(r.Context(), source, knowledge.NewGraphEncoder(w)); err != nil {
			ReplyWithInternalError(w, err)
			return
		}

		gJSON, err := json.Marshal(g)
		if err != nil {
			ReplyWithInternalError(w, err)
			return
		}

		if _, err := w.Write(gJSON); err != nil {
			ReplyWithInternalError(w, err)
		}
	}
}
